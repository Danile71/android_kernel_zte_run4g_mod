on early-init
    # Set init and its forked children's oom_adj.
    write /proc/1/oom_adj -16

    start ueventd

# create mountpoints
    mkdir /mnt 0775 root system
    #mkdir /mnt/sdcard 0000 system system
    #mkdir /mnt/sdcard2 0000 system system
    mkdir /storage 0055 system sdcard_r
    mkdir /storage/sdcard0 0000 system system
    mkdir /storage/sdcard1 0000 system system
    #mkdir /mnt/cd-rom 0000 system system
    # for backwards compatibility
    symlink /storage/sdcard0 /sdcard
    symlink /storage/sdcard0 /mnt/sdcard
    symlink /storage/sdcard1 /mnt/sdcard2

on early_property:ro.build.type=user
    write /proc/bootprof "INIT: user build setting"
    export BOOTCLASSPATH /system/framework/core.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/telephony-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/apache-xml.jar:/system/framework/mediatek-common.jar:/system/framework/mediatek-framework.jar:/system/framework/secondary-framework.jar:/system/framework/CustomProperties.jar:/system/framework/mediatek-telephony-common.jar:/system/framework/mediatek-op.jar

on early_property:ro.build.type=userdebug
    write /proc/bootprof "INIT: userdebug build setting"
    export BOOTCLASSPATH /system/framework/core.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/telephony-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/apache-xml.jar:/system/framework/mediatek-common.jar:/system/framework/mediatek-framework.jar:/system/framework/secondary-framework.jar:/system/framework/CustomProperties.jar:/system/framework/mediatek-telephony-common.jar:/system/framework/mediatek-op.jar

on early_property:ro.build.type=eng
    write /proc/bootprof "INIT: eng build setting"
    export BOOTCLASSPATH /system/framework/core.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/telephony-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/apache-xml.jar:/system/framework/mediatek-common.jar:/system/framework/mediatek-framework.jar:/system/framework/secondary-framework.jar:/system/framework/CustomProperties.jar:/system/framework/mediatek-telephony-common.jar:/system/framework/mediatek-op.jar:/system/framework/emma.jar

on init

sysclktz 0

loglevel 5
    write /proc/bootprof "INIT: on init start"

# setup the global environment
    export PATH /sbin:/vendor/bin:/system/sbin:/system/bin:/system/xbin
    export LD_LIBRARY_PATH /vendor/lib:/system/lib
    export ANDROID_BOOTLOGO 1
    export ANDROID_ROOT /system
    export ANDROID_ASSETS /system/app
    export ANDROID_DATA /data
    export ANDROID_STORAGE /storage
    
    export ASEC_MOUNTPOINT /mnt/asec
    export LOOP_MOUNTPOINT /mnt/obb

# Backward compatibility
    symlink /system/etc /etc
    symlink /sys/kernel/debug /d
    
# Temp Backward compatibility
    symlink /dev/block/platform/mtk-msdc.0/by-name/boot /dev/bootimg 
    symlink /dev/block/platform/mtk-msdc.0/by-name/recovery /dev/recovery
    symlink /dev/block/platform/mtk-msdc.0/by-name/secro  /dev/sec_ro
    symlink /dev/block/platform/mtk-msdc.0/by-name/kb /dev/kb
    symlink /dev/block/platform/mtk-msdc.0/by-name/dkb /dev/dkb 
    symlink /dev/block/platform/mtk-msdc.0/by-name/seccfg /dev/seccfg
    symlink /dev/block/platform/mtk-msdc.0/by-name/proinfo /dev/pro_info 
    symlink /dev/block/platform/mtk-msdc.0/by-name/nvram /dev/nvram   
    symlink /dev/block/platform/mtk-msdc.0/by-name/para /dev/misc
    symlink /dev/block/platform/mtk-msdc.0/by-name/logo /dev/logo 
       

# Right now vendor lives on the same filesystem as system,
# but someday that may change.
    symlink /system/vendor /vendor

# Create cgroup mount point for cpu accounting
    mkdir /acct
    mount cgroup none /acct cpuacct
    mkdir /acct/uid

# Backwards Compat - XXX: Going away in G*
    symlink /mnt/sdcard /sdcard

    mkdir /system
    mkdir /data 0771 system system
    mkdir /cache 0770 system cache
    mkdir /config 0500 root root
    #create mountpoint for persist partition
    mkdir /persist 0771 system system
    mkdir /protect_f 0771 system system
    mkdir /protect_s 0771 system system


    # Filesystem image public mount points.
    mkdir /mnt/obb 0700 root system
    mount tmpfs tmpfs /mnt/obb mode=0755,gid=1000

    write /proc/sys/kernel/panic_on_oops 1
    write /proc/sys/kernel/hung_task_timeout_secs 0
    write /proc/cpu/alignment 4
    write /proc/sys/kernel/sched_latency_ns 10000000
    write /proc/sys/kernel/sched_wakeup_granularity_ns 2000000
    write /proc/sys/kernel/sched_compat_yield 1
    write /proc/sys/kernel/sched_child_runs_first 0

# mount different fs start
on fs
    write /proc/bootprof "INIT:Mount_START"
    mount_all /fstab
		
    #change partition permissions
    exec /system/bin/chmod 0640 /dev/block/platform/mtk-msdc.0/by-name/boot
    exec /system/bin/chown root:system /dev/block/platform/mtk-msdc.0/by-name/boot
    exec /system/bin/chmod 0640 /dev/block/platform/mtk-msdc.0/by-name/recovery
    exec /system/bin/chown root:system /dev/block/platform/mtk-msdc.0/by-name/recovery
    exec /system/bin/chmod 0640 /dev/block/platform/mtk-msdc.0/by-name/secro
    exec /system/bin/chown root:system /dev/block/platform/mtk-msdc.0/by-name/secro
    exec /system/bin/chmod 0660 /dev/block/platform/mtk-msdc.0/by-name/seccfg
    exec /system/bin/chown root:system /dev/block/platform/mtk-msdc.0/by-name/seccfg
    exec /system/bin/chmod 0660 /dev/block/platform/mtk-msdc.0/by-name/proinfo
    exec /system/bin/chown root:system /dev/block/platform/mtk-msdc.0/by-name/proinfo
    exec /system/bin/chmod 0660 /dev/block/platform/mtk-msdc.0/by-name/otp
    exec /system/bin/chown root:system /dev/block/platform/mtk-msdc.0/by-name/otp
    exec /system/bin/chmod 0660 /dev/block/platform/mtk-msdc.0/by-name/nvram
    exec /system/bin/chown root:system /dev/block/platform/mtk-msdc.0/by-name/nvram
    exec /system/bin/chmod 0660 /dev/block/platform/mtk-msdc.0/by-name/para
    exec /system/bin/chown root:system /dev/block/platform/mtk-msdc.0/by-name/para
    exec /system/bin/chmod 0660 /dev/block/platform/mtk-msdc.0/by-name/logo
    exec /system/bin/chown root:system /dev/block/platform/mtk-msdc.0/by-name/logo			
    exec /system/bin/chown root:system /dev/block/platform/mtk-msdc.0/by-name/para						
    write /proc/bootprof "INIT:Mount_END"

on post-fs
    # once everything is setup, no need to modify /
    mount rootfs rootfs / ro remount
    chown system system /system/data
    mkdir /system/cache 0770 system cache

    # We chown/chmod /data again so because mount is run as root + defaults
    chown system system /system/data
    chmod 0777 /system/data
    # We chown/chmod /data again so because mount is run as root + defaults
    chown system system /data
    chmod 0771 /data

    # Same reason as /data above
    chown system cache /cache
    chmod 0770 /cache

    mkdir /cache/recovery 0770 system system


    # This may have been created by the recovery system with odd permissions
    chown system cache /cache/recovery
    chmod 0770 /cache/recovery

    #change permissions on vmallocinfo so we can grab it from bugreports
    chown root log /proc/vmallocinfo
    chmod 0440 /proc/vmallocinfo

    #change permissions on kmsg & sysrq-trigger so bugreports can grab kthread stacks
    chown root system /proc/kmsg
    chmod 0440 /proc/kmsg
    chown root system /proc/sysrq-trigger
    chmod 0220 /proc/sysrq-trigger

    chown system system /persist
    chmod 0771 /persist
    chown system system /protect_f
    chmod 0771 /protect_f
    chown system system /protect_s
    chmod 0771 /protect_s
# create basic filesystem structure
    mkdir /data/nvram 2770 root nvram
    mkdir /data/misc 01771 system misc
    mkdir /data/misc/bluetoothd 0770 bluetooth bluetooth
    mkdir /data/misc/bluetooth 0770 system system
    mkdir /data/misc/keystore 0700 keystore keystore
    mkdir /data/misc/keychain 0771 system system
    mkdir /data/misc/vpn 0770 system vpn
    mkdir /data/misc/systemkeys 0700 system system
    # give system access to wpa_supplicant.conf for backup and restore
    mkdir /data/misc/wifi 0770 wifi wifi
    chmod 0660 /data/misc/wifi/wpa_supplicant.conf
    mkdir /data/local 0771 shell shell
    mkdir /data/local/tmp 0771 shell shell
    mkdir /data/data 0771 system system
    mkdir /data/app-private 0771 system system
    mkdir /data/app 0771 system system
    mkdir /data/property 0700 root root

    # create the lost+found directories, so as to enforce our permissions
    mkdir /data/lost+found 0770
    mkdir /cache/lost+found 0770

    # double check the perms, in case lost+found already exists, and set owner
    chown root root /data/lost+found
    chmod 0770 /data/lost+found
    chown root root /cache/lost+found
    chmod 0770 /cache/lost+found
    
    # dhcp server 
    mkdir /data/misc/dhcp 0770 dhcp dhcp
    chown dhcp dhcp /data/misc/dhcp

    # device info interface
    #mknod /dev/devmap c 196 0;
    chmod 0440 /dev/devmap
    chown root system /dev/devmap

    # load driver base driver
    insmod /system/lib/modules/mtk_drvb_75.ko
    mknod /dev/drvb c 176 0
    chmod 0666 /dev/drvb

## Custom pos-fs area (START)
# Please add custom fs operation below

    # GPS
    chmod 0666 /dev/gps
    chmod 0660 /dev/stpgps

   #change partition permission

    chmod 0640 /mtd@sec_ro
    chown root system /mtd@sec_ro

    chmod 0640 /mtd@preloader
    chown root system /mtd@preloader

    chmod 0660 /mtd@pro_info
    chown root system /mtd@pro_info

    chmod 0640 /mtd@bootimg
    chown root system /mtd@bootimg

    chmod 0640 /mtd@recovery
    chown root system /mtd@recovery

    chmod 0660 /mtd@nvram
    chown root system /mtd@nvram

    chmod 0660 /mtd@seccfg
    chown root system /mtd@seccfg

    chmod 0660 /mtd@misc
    chown root system /mtd@misc

    #otp
    chmod 0660 /proc/driver/otp
    chown root system /proc/driver/otp

    mkdir /data/misc/dhcp 0770 dhcp dhcp
    chown dhcp dhcp /data/misc/dhcp



    # Touch Panel
    chown root diag /sys/module/tpd_setting/parameters/tpd_calmat
    chown root diag /sys/module/tpd_setting/parameters/tpd_em_debounce_time
    chown root diag /sys/module/tpd_debug/parameters/tpd_em_log
    chown root diag /sys/module/tpd_debug/parameters/tpd_em_log_to_fs

    chmod 0777 /dev/pmem_multimedia
    chmod 0777 /dev/mt6516-isp
    chmod 0777 /dev/mt6516-IDP
    chmod 0777 /dev/mt9p012
    chmod 0777 /dev/mt6516_jpeg
    chmod 0777 /dev/FM50AF

    # md32 boot
    chown root system /dev/md32
    chmod 0440 /dev/md32
    chown root system /sys/class/misc/md32/md32_mobile_log
    chmod 0660 /sys/class/misc/md32/md32_mobile_log
    write /sys/class/misc/md32/md32_boot 1    
    
    # RTC
    mkdir /data/misc/rtc 0770 system system

    # Modem related device nodes
    mkdir /data/nvram/md  0770 root nvram
    mkdir /data/nvram/md2 0770 root nvram

    chown ccci ccci /sys/kernel/ccci/boot
    # M4U
    #insmod /system/lib/modules/m4u.ko
    #mknod /dev/M4U_device c 188 0
    chmod 0444 /dev/M4U_device

    #set mlock limit to infinate (for m4u operation)
    setrlimit 8 -1 -1
    
    # Sensor
    chmod 0666 /dev/hwmsensor
    chmod 0666 /dev/msensor
    chmod 0666 /dev/gsensor
    chmod 0666 /dev/als_ps
    chmod 0666 /dev/gyroscope

    chown system /sys/class/input/input3/enable
    chown system /sys/class/input/input3/delay
    chown system /sys/class/input/input3/wake

    chown system /sys/class/input/input4/enable
    chown system /sys/class/input/input4/delay
    chown system /sys/class/input/input4/wake

    chown system /sys/class/input/input5/offsets

    #VideoCodec
    insmod /system/lib/modules/vcodec_kernel_driver.ko
    mknod /dev/Vcodec c 160 0
    chmod 0666 /dev/Vcodec


    mkdir /data/amit/

    chmod 0666 /dev/uio0
    
    #autok
    chown root system /sys/autok/debug
    chown root system /sys/autok/param_count
    chown root system /sys/autok/ready
    chown root system /sys/autok/ss_corner
    chown root system /sys/autok/suggest_vol
    chown root system /sys/autok/stage1/3/DONE
    chown root system /sys/autok/stage1/3/PARAMS
    chown root system /sys/autok/stage1/3/VOLTAGE
    chown root system /sys/autok/stage1/3/LOG
    chown root system /sys/autok/stage2/3
    
## Custom pos_fs area (END) 

on boot

   chown root /remount.sh
   chmod 700 /remount.sh
   exec /remount.sh

    # xlog
    start xlogboot

# basic network init
    ifup lo
    hostname localhost
    domainname localdomain

# Define RIL properties
    setprop rild.nw.operlist /system/etc/ril/oper.lis
    
		

# Start default class, this line is very important!!
   class_start default
   start sdcard
   start installd

## Daemon processes to be run by init.
##

# Update the second boot logo
# service bootlogoupdater /system/bin/boot_logo_updater
#    oneshot

service ueventd /sbin/ueventd
    class core
    critical

service console /system/bin/sh
    class core
    console
    disabled
    user root
    group log

# For WiFi High Speed calibration
# service autokd /system/bin/autokd
#    class core
#    user system 
#    group nvram system
    
on property:ro.debuggable=1
    start console

on property:sys.powerctl=*
    powerctl ${sys.powerctl}

# adbd is controlled via property triggers in init.<platform>.usb.rc
service adbd /sbin/adbd
    class core

## Custom service area (START)
# Please add custom service below
service ccci_fsd /system/bin/ccci_fsd 0
    user ccci
    group  nvram ccci system
    oneshot

service ccci2_fsd /system/bin/ccci_fsd 1
    user ccci
    group  nvram ccci system
    oneshot

service ccci_mdinit /system/bin/ccci_mdinit 0
    user system
    group ccci system
    oneshot

service ccci2_mdinit /system/bin/ccci_mdinit 1
    user system
    group ccci system
    oneshot

service nvram_daemon /system/bin/nvram_daemon
    user nvram
    group nvram system
    oneshot

# DFO (Begin)
service featured /system/bin/featured
    user nvram
    group nvram system
    socket dfo stream 660 nvram system
# DFO (End)

service installd /system/bin/installd
    class main
    socket installd stream 600 system system

service factory_no_image /system/bin/logwrapper /system/bin/factory
    disable
    oneshot

service factory_with_image /system/bin/logwrapper /sbin/factory
	disable
    oneshot
    
service thermal_manager /system/bin/thermal_manager
    user root
    oneshot

## Custom service area (END)


on property:sys.mtk.no.factoryimage=1
    start factory_no_image

on property:sys.mtk.no.factoryimage=0
    start factory_with_image

#mass_storage,adb,acm
on property:sys.usb.com_config=0
    write /sys/class/android_usb/android0/iSerial "0123456789ABCDEF" 
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 0bb4
    write /sys/class/android_usb/android0/idProduct 0005
    write /sys/class/android_usb/android0/f_acm/instances 1
    write /sys/class/android_usb/android0/functions mass_storage,adb,acm
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.acm_idx 1

#acm
on property:sys.usb.com_config=1
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/iSerial " "
    write /sys/class/android_usb/android0/idVendor 0e8d
    write /sys/class/android_usb/android0/idProduct 2007
    write /sys/class/android_usb/android0/f_acm/instances 1
    write /sys/class/android_usb/android0/functions acm
    write /sys/class/android_usb/android0/bDeviceClass 02
    write /sys/class/android_usb/android0/enable 1

#singloe modem comport for factory mode   
on property:sys.usb.config=gs3,dual_acm
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor $sys.usb.vid
    write /sys/class/android_usb/android0/idProduct 202E
    write /sys/class/android_usb/android0/f_acm/port_index 1,4
    write /sys/class/android_usb/android0/functions mass_storage,adb,acm
    write /sys/class/android_usb/android0/enable 1
    chown system radio /dev/ttyGS3
    chmod 0660 /dev/ttyGS3
    start adbd
    setprop sys.usb.state $sys.usb.config
    setprop sys.usb.acm_idx 1,4
    
#dual modem comport for factory mode
on property:sys.usb.config=gs1gs3,dual_acm
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor $sys.usb.vid
    write /sys/class/android_usb/android0/idProduct 202F
    write /sys/class/android_usb/android0/f_acm/port_index 1,2,4
    write /sys/devices/platform/mt_usb/saving 1
    write /sys/class/android_usb/android0/functions adb,acm
    write /sys/class/android_usb/android0/enable 1
    chown system radio /dev/ttyGS3
    chmod 0660 /dev/ttyGS3
    chown system radio /dev/ttyGS1
    chmod 0660 /dev/ttyGS1
    start adbd
    setprop sys.usb.state $sys.usb.config
    setprop sys.usb.acm_idx 1,2,4

